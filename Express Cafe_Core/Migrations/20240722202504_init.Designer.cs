// <auto-generated />
using System;
using Express_Cafe_Core.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Express_Cafe_Core.Migrations
{
    [DbContext(typeof(dbRestaurentContext))]
    [Migration("20240722202504_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Express_Cafe_Core.Models.DailyMenu", b =>
                {
                    b.Property<int>("DailyMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DailyMenuId"));

                    b.Property<decimal?>("CookedQuantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly?>("DailyMenuDate")
                        .HasColumnType("date");

                    b.Property<decimal>("DemandQuantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ServingQuantity")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("DailyMenuId");

                    b.HasIndex(new[] { "RecipeId" }, "IX_DailyMenus_RecipeId");

                    b.ToTable("DailyMenus");
                });

            modelBuilder.Entity("Express_Cafe_Core.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Express_Cafe_Core.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"));

                    b.Property<string>("RecipeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Express_Cafe_Core.Models.RecipeItem", b =>
                {
                    b.Property<int>("RecipeItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeItemId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeItemId");

                    b.HasIndex(new[] { "ItemId" }, "IX_RecipeItems_ItemId");

                    b.HasIndex(new[] { "RecipeId" }, "IX_RecipeItems_RecipeId");

                    b.ToTable("RecipeItems");
                });

            modelBuilder.Entity("Express_Cafe_Core.Models.Requisition", b =>
                {
                    b.Property<int>("RequisitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequisitionId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("RequestedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("");

                    b.Property<decimal>("RequestedQuantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("RequisitionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RequisitionId");

                    b.HasIndex(new[] { "ItemId" }, "IX_Requisitions_ItemId");

                    b.ToTable("Requisitions");
                });

            modelBuilder.Entity("Express_Cafe_Core.Models.SaleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DailyMenuId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SaleHeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DailyMenuId" }, "IX_SaleDetails_DailyMenuId");

                    b.HasIndex(new[] { "SaleHeaderId" }, "IX_SaleDetails_SaleHeaderId");

                    b.ToTable("SaleDetails");
                });

            modelBuilder.Entity("Express_Cafe_Core.Models.SaleHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("SaleDate")
                        .HasColumnType("date");

                    b.Property<decimal>("TotalBill")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("VAT");

                    b.HasKey("Id");

                    b.ToTable("SaleHeader", (string)null);
                });

            modelBuilder.Entity("Express_Cafe_Core.Models.DailyMenu", b =>
                {
                    b.HasOne("Express_Cafe_Core.Models.Recipe", "Recipe")
                        .WithMany("DailyMenus")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Express_Cafe_Core.Models.RecipeItem", b =>
                {
                    b.HasOne("Express_Cafe_Core.Models.Item", "Item")
                        .WithMany("RecipeItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Express_Cafe_Core.Models.Recipe", "Recipe")
                        .WithMany("RecipeItems")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Express_Cafe_Core.Models.Requisition", b =>
                {
                    b.HasOne("Express_Cafe_Core.Models.Item", "Item")
                        .WithMany("Requisitions")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Express_Cafe_Core.Models.SaleDetail", b =>
                {
                    b.HasOne("Express_Cafe_Core.Models.DailyMenu", "DailyMenu")
                        .WithMany("SaleDetails")
                        .HasForeignKey("DailyMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Express_Cafe_Core.Models.SaleHeader", "SaleHeader")
                        .WithMany("SaleDetails")
                        .HasForeignKey("SaleHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DailyMenu");

                    b.Navigation("SaleHeader");
                });

            modelBuilder.Entity("Express_Cafe_Core.Models.DailyMenu", b =>
                {
                    b.Navigation("SaleDetails");
                });

            modelBuilder.Entity("Express_Cafe_Core.Models.Item", b =>
                {
                    b.Navigation("RecipeItems");

                    b.Navigation("Requisitions");
                });

            modelBuilder.Entity("Express_Cafe_Core.Models.Recipe", b =>
                {
                    b.Navigation("DailyMenus");

                    b.Navigation("RecipeItems");
                });

            modelBuilder.Entity("Express_Cafe_Core.Models.SaleHeader", b =>
                {
                    b.Navigation("SaleDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
